version: '3.8'

services:
  traefik:
    image: traefik:v3.0
    container_name: traefik
    restart: always
    command:
      - "--api.insecure=true"
      - "--providers.docker=true"
      - "--entrypoints.web.address=:80"
      - "--entrypoints.websecure.address=:443"
      - "--certificatesresolvers.letsencrypt.acme.httpchallenge=true"
      - "--certificatesresolvers.letsencrypt.acme.httpchallenge.entrypoint=web"
      - "--certificatesresolvers.letsencrypt.acme.email=your-email@example.com"
      - "--certificatesresolvers.letsencrypt.acme.storage=/letsencrypt/acme.json"
      - "--entrypoints.websecure.http.tls=true"
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ./traefik/letsencrypt:/letsencrypt
    labels:
      - "traefik.enable=true"
    networks:
      - traefik

  backend:
    build: ./backend
    container_name: rpg-backend
    restart: always
    environment:
      - DATABASE_URL=postgres://rpg_user:rpg_pass@db:5432/rpg
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.backend.rule=Host(`api.barnabo-connect.com`)"
      - "traefik.http.services.backend.loadbalancer.server.port=8080"
    depends_on:
      - db
    networks:
      - backend
      - traefik
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U rpg_user"]
      interval: 10s
      timeout: 5s
      retries: 5

  frontend:
    build: ./frontend
    container_name: rpg-frontend
    restart: always
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.frontend.rule=Host(`game.barnabo-connect.com`)"
      - "traefik.http.services.frontend.loadbalancer.server.port=3000"
    depends_on:
      - backend
    networks:
      - frontend
      - traefik

  db:
    image: postgres:15-alpine
    container_name: rpg-db
    restart: always
    environment:
      POSTGRES_USER: rpg_user
      POSTGRES_PASSWORD: rpg_pass
      POSTGRES_DB: rpg
    volumes:
      - db_data:/var/lib/postgresql/data
    networks:
      - backend
    
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U rpg_user"]
      interval: 10s
      timeout: 5s
      retries: 5

  jenkins:
    image: jenkins/jenkins:lts-jdk11
    container_name: jenkins
    restart: always
    ports:
      - "8080:8080"
      - "50000:50000"
    volumes:
      - jenkins_home:/var/jenkins_home
      - /var/run/docker.sock:/var/run/docker.sock
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.jenkins.rule=Host(`jenkins.barnabo-connect.com`)"
      - "traefik.http.services.jenkins.loadbalancer.server.port=8080"
      - "traefik.http.routers.jenkins.entrypoints=websecure"
      - "traefik.http.routers.jenkins.tls.certresolver=letsencrypt"
      - "traefik.http.middlewares.jenkins-auth.forwardauth.address=http://keycloak:8080/realms/your-realm/protocol/openid-connect/auth"
      - "traefik.http.middlewares.jenkins-auth.forwardauth.authResponseHeaders=X-Auth-Request-User,X-Auth-Request-Email"
    networks:
      - backend
      - traefik
  
  keycloak:
    image: jboss/keycloak
    container_name: keycloak
    restart: always
    environment:
      - KEYCLOAK_USER=admin
      - KEYCLOAK_PASSWORD=admin
      - DB_VENDOR=H2
    ports:
      - "8080:8081"
    networks:
      - traefik

volumes:
  db_data:
  jenkins_home:

networks:
  backend:
  traefik:
#    external: true  # if you're sharing it across multiple projects

